<?xml version="1.0"?>
<doc>
    <assembly>
        <name>api</name>
    </assembly>
    <members>
        <member name="M:schoolmanagment.Controllers.Admin.AdminController.GetAllAdmin(Admin.Manager.Admin.Query.GetAll.GetAllAdminQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Admin With Role Name
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.AdminController.GetAdmin(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get  Admin With Role Name
            </summary>    
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.AdminController.Add(Admin.Manager.Admin.Command.Add.AddAdminCommand,System.Threading.CancellationToken)">
            <summary>
            Create a new admin and notify him
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.AdminController.updateAdmin(Admin.Manager.Admin.Command.Update.UpdateAdminCommand,System.Threading.CancellationToken)">
            <summary>
            update admin info
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.AdminController.updateAdminStatus(Admin.Manager.Admin.Command.ChangeStatus.ChangeAdminStatusCommand,System.Threading.CancellationToken)">
            <summary>
            update admin status
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.AdminController.DeleteAdmin(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Delete  admin
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.AuthController.Login(Admin.Manager.Auth.Command.Login.LoginAdminCommand,System.Threading.CancellationToken)">
            <summary>
            Login admin to dashboard
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.AuthController.Logout">
            <summary>
            logout admin from dashboard
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.BannerController.GetAll(Admin.ClassRoom.Banner.Query.GetAll.GetAllBannerQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Banner 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.BannerController.Add(Admin.ClassRoom.Banner.Command.Add.AddBannerCommand,System.Threading.CancellationToken)">
            <summary>
            Add a New Banner 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.BannerController.Delete(Admin.ClassRoom.Banner.Command.Delete.DeleteBannerCommand,System.Threading.CancellationToken)">
            <summary>
            Delete Banner 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.GetFinalResult(Admin.ClassRoom.Class.Query.GetFinalResultQuery,System.Threading.CancellationToken)">
            <summary>
            get Final Result for class in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.GetAll(System.Threading.CancellationToken)">
            <summary>
            get All Class 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.GetAllStageWithClasses(System.Threading.CancellationToken)">
            <summary>
            get All Stage With Classes 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.StartYear(Admin.ClassRoom.Class.Command.StartYear.StartYearCommand,System.Threading.CancellationToken)">
            <summary>
            get All Stage With Classes 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.GetAllActiveClasses(System.Threading.CancellationToken)">
            <summary>
            get All Active Classes 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.GetAllUnActiveClasses(System.Threading.CancellationToken)">
            <summary>
            get All UnActive Classes 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.GetAllStudentBill(Admin.ClassRoom.Class.Query.GetAllBill.GetAllBillQuery,System.Threading.CancellationToken)">
            <summary>
            get All Bill for  Class In specific year  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.GetUnSigned(Admin.ClassRoom.Class.Query.GetUnSignedSubject.GetUnSignedSubjectQuery,System.Threading.CancellationToken)">
            <summary>
            get All Un Signed Subject To Teacher  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.AsignSubjectToTeacher(Admin.ClassRoom.Class.Command.SignSubjectToTeacher.SignSubjectToTeacherCommand,System.Threading.CancellationToken)">
            <summary>
            ASign Subject To Teacher    
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.AddBill(Admin.ClassRoom.Class.Command.AddBill.AddBillCommand,System.Threading.CancellationToken)">
            <summary>
            Add a New Bill to Specific class in active year  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ClassController.FinishClassYear(Admin.ClassRoom.Class.Command.FinishYear.FinishYearCommand,System.Threading.CancellationToken)">
            <summary>
            Finish class year   
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.NotificationController.GetAllNotification(Admin.Notification.Query.ReadAll.ReadAllAdminNotificationCommand,System.Threading.CancellationToken)">
            <summary>
            get all Notification  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.NotificationController.Send(Admin.Notification.Command.Send.SendNotificationCommand,System.Threading.CancellationToken)">
            <summary>
            Send Notification to Another User  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ParentController.GetAllParent(Admin.Student.Parent.Query.GetAll.GetAllParentsQuery,System.Threading.CancellationToken)">
            <summary>
            get all Parent  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ParentController.GetAllStudentByParent(Admin.Student.Parent.Query.GetStudent.GetAllParentStudentQuery,System.Threading.CancellationToken)">
            <summary>
            get all student By Parent  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ParentController.GetAllBill(Admin.Parent.Query.GetAllChildBillQuery,System.Threading.CancellationToken)">
            <summary>
            get all bill   
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ParentController.AddParent(Admin.Student.Parent.Command.Add.AddParentCommand,System.Threading.CancellationToken)">
            <summary>
            Add a new Parent to this school  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ParentController.DeleteParent(Admin.Student.Parent.Command.Delete.DeleteParentCommand,System.Threading.CancellationToken)">
            <summary>
            Delete Parent from this school  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ParentController.UpdateParent(Admin.Student.Parent.Command.Update.UpdateParentCommand,System.Threading.CancellationToken)">
            <summary>
            Update Parent info in this school  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ProgrammController.GetAll(Admin.ClassRoom.Programm.Query.GetAll.GetAllProgrammQuery,System.Threading.CancellationToken)">
            <summary>
            get all programm 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.ProgrammController.Add(Admin.ClassRoom.Programm.Command.Add.AddProgrammCommand,System.Threading.CancellationToken)">
            <summary>
            Add programm to Class In This Year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.RoleController.GetAll(Admin.Manager.Role.Query.GetAll.GetRolesQuery,System.Threading.CancellationToken)">
            <summary>
            get all role 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.RoleController.GetAllAdminByRole(Admin.Manager.Role.Query.Get.GetManagerByRoleQuery,System.Threading.CancellationToken)">
            <summary>
            get all admin by role id 
            </summary>
            <returns>return all admin in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.RoleController.GetPermissions(System.Threading.CancellationToken)">
            <summary>
            get all Permission that you should use in add role 
            </summary>
            <returns>return all permissions</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.RoleController.AddRole(Admin.Manager.Role.Command.Add.AddRoleCommand,System.Threading.CancellationToken)">
            <summary>
            add a new role to use 
            </summary>
            <returns>return response true if operation is successed</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.RoleController.UpdateRole(Admin.Manager.Role.Command.Update.UpdateRoleCommand,System.Threading.CancellationToken)">
            <summary>
             update role  
            </summary>
            <returns>return response true if operation is successed</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.RoleController.DeleteRole(Admin.Manager.Role.Command.Delete.DeleteRoleCommand,System.Threading.CancellationToken)">
            <summary>
            delete role that not any admin use it 
            </summary>
            <returns>return response true if operation is successed</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.Add(Admin.Student.Student.Command.Add.AddStudentCommand,System.Threading.CancellationToken)">
            <summary>
            Add a New Student In School 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.Delete(Admin.Student.Student.Command.Delete.DeleteStudentCommand,System.Threading.CancellationToken)">
            <summary>
            Delete Student from School 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.GetAllStudentSubjectByYear(Admin.ClassRoom.Student.Query.GetSubjectByYear.GetStudentSubjectByYearQuery,System.Threading.CancellationToken)">
            <summary>
            get all student mark in specifice year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.GetAllStudentQuezByYearAndSubject(Admin.Student.Student.Query.GetAllQuezByYearAndSubject.GetAllQuezByYearAndSubjectQuery,System.Threading.CancellationToken)">
            <summary>
            get all student quez in specifice year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.GetAll(Admin.Student.Student.Query.GetAll.GetAllStudentQuery,System.Threading.CancellationToken)">
            <summary>
            get all student  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.GetAllInstallment(Admin.Student.Student.Query.GetAllInstallment.GetAllInstallmentQuery,System.Threading.CancellationToken)">
            <summary>
            get all student installment  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.GetAllStudentBill(Admin.Student.Student.Query.GetAllStudentBill.GetAllStudentBillQuery,System.Threading.CancellationToken)">
            <summary>
            get all student Bill in specific year  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.StudentController.PayBill(Admin.Student.Student.Command.PayBill.PayBillCommand,System.Threading.CancellationToken)">
            <summary>
            Pay Bill  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetAllSubjectWithStatus(Admin.ClassRoom.Subject.Query.GetAll.GetAllSubjectCommand,System.Threading.CancellationToken)">
            <summary>
            get all Subject with Status  in this year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetAllSubjectName(System.Threading.CancellationToken)">
            <summary>
            get all Subject Name 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetAllActiveSubjectName(Admin.ClassRoom.Subject.Query.GetActive.GetActiveSubjectQuery,System.Threading.CancellationToken)">
            <summary>
            get all active Subject Name 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetAllSubjectByYear(Admin.ClassRoom.Subject.Query.GetAllByYear.GetAllSubjectByYearQuery,System.Threading.CancellationToken)">
            <summary>
            get all Subject in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetAllTeacherBySubject(Admin.Teacher.Teacher.Query.GetAllSubject.GetAllSubjectQuery,System.Threading.CancellationToken)">
            <summary>
            get all Teacher By Subject 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetSubjectDetail(Admin.ClassRoom.Subject.Query.Get.GetSubjectDetailQuery,System.Threading.CancellationToken)">
            <summary>
            get Subject Detail in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetSessionNumber(Admin.ClassRoom.Subject.Query.GetSession.GetSessionQuery,System.Threading.CancellationToken)">
            <summary>
            get Subject Session Number In Specific Year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.SubjectController.GetAudienceInSpecificSession(Admin.ClassRoom.Subject.Query.GetAudience.GetAudienceQuery,System.Threading.CancellationToken)">
            <summary>
            get Subject Audience In Specific Year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetAllTeacher(Admin.Teacher.Teacher.Query.GetAll.GetAllTeacherQuery,System.Threading.CancellationToken)">
            <summary>
            get all Teacher with subject count in this year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetAllSubjectWithStudent(Admin.Teacher.Teacher.Query.GetAllSubjectAndStudent.GetAllSubjectAndStudentQuery,System.Threading.CancellationToken)">
            <summary>
            get all Teacher with subject and student in all year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetAllSubjectWithStudentInSpecificYear(Admin.Teacher.Teacher.Query.GetAllTeacherStudentSubject.GetAllTeacherStudentSubjectQuery,System.Threading.CancellationToken)">
            <summary>
            get all subject with student in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetAllSubjectAndLeson(Admin.Teacher.Teacher.Query.GetAllLeson.GetAllTeacherLesonQuery,System.Threading.CancellationToken)">
            <summary>
            get all Teacher  subject  and leson  in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetQuezDetailStudent(Admin.Teacher.Teacher.Query.GetStudentMarkInQuez.GetStudentMarkInQuezQuery,System.Threading.CancellationToken)">
            <summary>
            get all student answer in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetQuezDetailWithQuestionAndAnswer(Admin.Teacher.Teacher.Query.GetAllQuezDetail.GetAllQuezDetailQuery,System.Threading.CancellationToken)">
            <summary>
            get quez detail with question and answer  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetQuezDetailWithStudentAnswer(Admin.Teacher.Teacher.Query.GetAllStudentAnswerInQuez.GetAllStudentAnswerInQuezQuery,System.Threading.CancellationToken)">
            <summary>
            get quez detail with student answer  
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.GetAllTeacherQuez(Admin.Teacher.Teacher.Query.GetAllQuez.GetAllTeacherQuezQuery,System.Threading.CancellationToken)">
            <summary>
            get all Teacher  subject  and leson  in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.AddTeacher(Admin.Teacher.Teacher.Command.Add.AddTeacherCommand,System.Threading.CancellationToken)">
            <summary>
            add new   Teacher and notify him by email 
            </summary>
            <returns>return if the operation successed</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.UpdateTeacher(Admin.Teacher.Teacher.Command.Update.UpdateTeacherCommand,System.Threading.CancellationToken)">
            <summary>
            update exists Teacher info and notify him by email 
            </summary>
            <returns>return if the operation successed</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.UpdateStatus(Admin.Teacher.Teacher.Command.ChangeStatus.ChangeTeacherStatusCommand,System.Threading.CancellationToken)">
            <summary>
            update teacher status 
            </summary>
            <returns>return if the operation successed</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.TeacherController.DeleteTeacher(Admin.Teacher.Teacher.Command.Delete.DeleteTeacherCommand,System.Threading.CancellationToken)">
            <summary>
            delete  Teacher  
            </summary>
            <returns>return if the operation successed</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.VacationController.ChangeStatus(Admin.Teacher.Vacation.Command.ChangeStatus.ChnageVacationStatusCommand,System.Threading.CancellationToken)">
            <summary>
            Change Vacation Status  
            </summary>
            <returns></returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.VacationController.AddVacationType(Admin.Teacher.VacationType.Command.Add.AddVacationTypeCommand,System.Threading.CancellationToken)">
            <summary>
            Add a new Vacation Type  
            </summary>
            <returns></returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.VacationController.GetAllVacationTypes(Admin.Teacher.VacationType.Query.GetAll.GetAllVacationTypeQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Vacation Type  
            </summary>
            <returns></returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.VacationController.DeleteVacationType(Admin.Teacher.VacationType.Command.Delete.DeleteVacationTypeCommand,System.Threading.CancellationToken)">
            <summary>
            Delete Vacation Type  
            </summary>
            <returns></returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.VacationController.GetAll(Admin.Teacher.Vacation.Query.GetAll.GetVacationQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Vacation  
            </summary>
            <returns></returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Admin.YearController.AddYear(Admin.ClassRoom.Year.Command.Add.AddYearCommand,System.Threading.CancellationToken)">
            <summary>
            Add New Year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Common.ImageController.UploadImage(Common.Feature.Image.Command.UploadSingle.UploadImageCommand)">
            <summary>
            upload image with at great size is 1 mega
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Common.ImageController.UploadBase64Image(Common.Feature.Image.Command.UploadBase64.UploadBase64Command)">
            <summary>
            upload base64 image 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Common.ImageController.UploadImages(Common.Feature.Image.Command.UploadImages.UploadImagesCommand)">
            <summary>
            upload images with at great size is 1 mega for one
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.LoginParent(Parent.Auth.Command.Login.LoginParentCommand,System.Threading.CancellationToken)">
            <summary>
            Login Parent to App
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.ValidateCode(Parent.Auth.Command.ValidateCode.ValidateCodeCommand,System.Threading.CancellationToken)">
            <summary>
            Validate Code And Get Token Info For Parent
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.Logout(System.Threading.CancellationToken)">
            <summary>
            Logout Student
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.GetProfile(System.Threading.CancellationToken)">
            <summary>
            Get Profile Parent
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.RefreshToken(Parent.Auth.Command.RefreshToken.RefreshParentTokenCommand,System.Threading.CancellationToken)">
            <summary>
            Refresh Student Token
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.ForgetPassword(Parent.Auth.Command.ForgetPassword.ForgetPasswordCommand,System.Threading.CancellationToken)">
            <summary>
            Forget Password Request
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.CheckResetCode(Parent.Auth.Command.CheckResetCode.CheckResetCodeCommand,System.Threading.CancellationToken)">
            <summary>
            Check Code if exists and then return token info
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.ChangePassword(Parent.Auth.Command.ChangePassword.ChangePasswordCommand,System.Threading.CancellationToken)">
            <summary>
            Change Parent Password
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.UpdateParentProfile(Parent.Auth.Command.UpdateProfile.UpdateProfileCommand,System.Threading.CancellationToken)">
            <summary>
            Update Parent Profile
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.AuthController.ResetParentCode(Parent.Auth.Command.ReSetCode.ResetCodeCommand,System.Threading.CancellationToken)">
            <summary>
            Reset Parent Code
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.HomeController.GetHome(System.Threading.CancellationToken)">
            <summary>
            Get Parent Home Page
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.NotificationController.GetAllNotification(Parent.Notification.Query.GetAll.GetAllNotificationQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Parent Notification
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.NotificationController.Delete(Parent.Notification.Command.Delete.DeleteNotificationCommand,System.Threading.CancellationToken)">
            <summary>
            Delete Parent Notification
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.StudentController.GetAllChildName(System.Threading.CancellationToken)">
            <summary>
            Get All Parent Student
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.StudentController.GetFinalResults(Parent.Student.Query.FinalResult.GetParentFinalResultQuery,System.Threading.CancellationToken)">
            <summary>
            Get Student Final Result
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.StudentController.GetParentBill(Parent.Student.Query.GetBill.GetParentBillQuery,System.Threading.CancellationToken)">
            <summary>
            Get Student Bill
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.StudentController.GetAllStudentAudiences(Parent.Student.Query.GetAllAudience.GetAllParentAudienceQuery,System.Threading.CancellationToken)">
            <summary>
            Get Student Audiences
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.StudentController.GiveAudienceReason(Parent.Student.Command.GiveReasonOfAudience.GiveReasonOfAudienceCommand,System.Threading.CancellationToken)">
            <summary>
            Give  Audience Reason 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Parent.StudentController.GetAllStudentQuezMark(Parent.Student.Query.GetStudentMarks.GetParentStudentMarksQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Student quez 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.LoginStudent(Student.Auth.Command.Login.LoginStudentCommand,System.Threading.CancellationToken)">
            <summary>
            Login Student to App
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.ValidateCode(Student.Auth.Command.ValidateCode.ValidateCodeCommand,System.Threading.CancellationToken)">
            <summary>
            Validate Code And Get Token Info For Student
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.Logout(Student.Auth.Command.Logout.LogoutStudentCommand,System.Threading.CancellationToken)">
            <summary>
            Logout Student
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.GetProfile(System.Threading.CancellationToken)">
            <summary>
            Get Profile Parent
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.RefreshToken(Student.Auth.Command.RefreshToken.RefreshStudentTokenCommand,System.Threading.CancellationToken)">
            <summary>
            Refresh Student Token
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.UpdateStudentProfile(Student.Auth.Command.UpdateProfile.UpdateProfileCommand,System.Threading.CancellationToken)">
            <summary>
            Update Student Profile
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.ResetCode(Student.Auth.Command.ForgetPassword.ForgetPasswordCommand,System.Threading.CancellationToken)">
            <summary>
            Forget Student Password
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.CheckResetCode(Student.Auth.Command.CheckResetCode.CheckResetCodeCommand,System.Threading.CancellationToken)">
            <summary>
            Check Reset Code
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.ChangePassword(Student.Auth.Command.ChangePassword.ChangePasswordCommand,System.Threading.CancellationToken)">
            <summary>
            Change Password
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.AuthController.ResetStudentCode(Student.Auth.Command.ReSetCode.ResetCodeCommand,System.Threading.CancellationToken)">
            <summary>
            Change Password
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.HomeController.GetStudentHome(System.Threading.CancellationToken)">
            <summary>
            Get Student Home
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.HomeController.GetAllLeson(Student.Subject.Query.GetAllLeson.GetAllLesonQuery,System.Threading.CancellationToken)">
            <summary>
            Get Student Leson
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.HomeController.GetAllQuez(Student.Subject.Query.GetAllQuez.GetAllQuezQuery,System.Threading.CancellationToken)">
            <summary>
            Get Student Quez
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.HomeController.GetAllMark(System.Threading.CancellationToken)">
            <summary>
            Get Student Quez
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.NotificationController.GetAllNotification(Student.Notification.Query.GetAll.GetAllNotificationQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Student Notification
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.NotificationController.Delete(Student.Notification.Command.Delete.DeleteNotificationCommand,System.Threading.CancellationToken)">
            <summary>
            Delete Parent Notification
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.QuezController.GetQuezInfo(Student.Quez.Query.GetQuezInfo.GetQuezInfoQuery,System.Threading.CancellationToken)">
            <summary>
            Get Quez Info 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.QuezController.GetFinishQuezInfo(Student.Quez.Query.GetFinishQuezInfo.GetFinishQuezInfoQuery,System.Threading.CancellationToken)">
            <summary>
            Get finish Quez Info 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.QuezController.SolveQuez(Student.Quez.Command.SolveQuez.SolveQuezCommand,System.Threading.CancellationToken)">
            <summary>
            Solve Quez 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Student.QuezController.GetAllActiveQuez(Student.Quez.Query.GetAll.GetAllQuezQuery,System.Threading.CancellationToken)">
            <summary>
            Solve Quez 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.LesonController.GetAllSubjectAndLeson(Teacher.Leson.Teacher.Leson.Query.GetAllLeson.GetAllLesonQuery,System.Threading.CancellationToken)">
            <summary>
            get all Teacher  subject  and leson  in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.LesonController.Add(Teacher.Leson.Command.Add.AddLesonCommand,System.Threading.CancellationToken)">
            <summary>
            Create a new leson to specific subject in currect year
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.LesonController.Delete(Teacher.Leson.Command.Delete.DeleteLesonCommand,System.Threading.CancellationToken)">
            <summary>
            delete a leson to specific subject in currect year
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.NotificationController.ReadAll(Teacher.Notification.Query.GetAll.ReadAllTeacherNotificationCommand,System.Threading.CancellationToken)">
            <summary>
            Create a new question to specific quez in currect year
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuestionController.Add(Teacher.Question.Command.Add.AddQuestionCommand,System.Threading.CancellationToken)">
            <summary>
            Create a new question to specific quez in currect year
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuestionController.Delete(Teacher.Question.Command.Delete.DeleteQuestionCommand,System.Threading.CancellationToken)">
            <summary>
            Delete a  question from specific quez 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuestionController.Update(Teacher.Question.Command.Update.UpdateQuestionCommand,System.Threading.CancellationToken)">
            <summary>
            Update a  question To specific quez 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.Add(Teacher.Quez.Command.Add.AddQuezCommand,System.Threading.CancellationToken)">
            <summary>
            Create a new quez to specific subject in currect year
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.Delete(Teacher.Quez.Command.Delete.DeleteQuezCommand,System.Threading.CancellationToken)">
            <summary>
            Delete a  Quez from specific subject 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.Update(Teacher.Quez.Command.Update.UpdateQuezCommand,System.Threading.CancellationToken)">
            <summary>
            Update a  Quez To specific subject 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.GetAll(Teacher.Quez.Query.GetAllQuez.GetAllQuezQuery,System.Threading.CancellationToken)">
            <summary>
            Get All  Quez in specific year 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.GetQuezDetail(Teacher.Quez.Query.Get.GetQuezDetailQuery,System.Threading.CancellationToken)">
            <summary>
            Get  Quez detail  
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.GetStudentAnswer(Teacher.Quez.Query.GetStudentAnswer.GetStudentAnswerQuery,System.Threading.CancellationToken)">
            <summary>
            Get Student Answer Detail  
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.GetQuestion(Teacher.Quez.Query.GetQuestion.GetQuezQuestionQuery,System.Threading.CancellationToken)">
            <summary>
            Get Quez With Question Detail  
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.QuezController.GetQuezDetailWithQuestionAndAnswer(Teacher.Quez.Query.GetAllQuezWithQuestionAndAnswer.GetQuezWithQuestionAndAnswerQuery,System.Threading.CancellationToken)">
            <summary>
            Get Quez With Question Detail and Answer  
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.StudentController.GetAllStudentInActiveSubject(Teacher.Student.Query.GetUnHasMark.GetUnhaveMarkStudentQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Student for Subject 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.StudentController.GetAllStudentsForSetSession(Teacher.Student.Query.GetStudentHaveSubject.GetStudentHaveSubjectQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Student for Subject 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.StudentController.AddMarkToStudent(Teacher.Subject.Command.Add.AddMarkToStudentCommand,System.Threading.CancellationToken)">
            <summary>
            Add Mark To Student
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.SubjectController.GetAllAudience(Teacher.Subject.Query.GetAllAudience.GetAllAudienceQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Audience Date 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.SubjectController.AddSession(Teacher.Subject.Command.AddSession.AddSessionCommand,System.Threading.CancellationToken)">
            <summary>
            Add A Session 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.SubjectController.GetOwnedTeacherActiveSubject(System.Threading.CancellationToken)">
            <summary>
            Get All subject name 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.SubjectController.GetAudienceDetail(Teacher.Subject.Query.GetAudienceDetail.GetAudienceDetailQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Audience Detail 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.SubjectController.GetAllTeacherQuezInSpecificYear(Teacher.Quez.Query.GetAllQuez.GetAllQuezQuery,System.Threading.CancellationToken)">
            <summary>
            get all Teacher  subject  and quez  in specific year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.SubjectController.GetAllSubjectAndStudent(Teacher.Subject.Query.GetWithStudent.GetAllSubjectWithStudentQuery,System.Threading.CancellationToken)">
            <summary>
            Get All Audience Detail 
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.SubjectController.UpdateStudentMark(Teacher.Student.Command.AddMark.AddMarkCommand,System.Threading.CancellationToken)">
            <summary>
            Update Student Mark in Subject in active year
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.VacationController.GetAllVacationTypes(System.Threading.CancellationToken)">
            <summary>
            Get All Vacation Type
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.VacationController.Add(Teacher.Vacation.Command.Request.RequestVacationCommand,System.Threading.CancellationToken)">
            <summary>
            request a new vacation from admin
            </summary>
        </member>
        <member name="M:schoolmanagment.Controllers.Teacher.YearController.GetAllTeacherYear(System.Threading.CancellationToken)">
            <summary>
            get all year 
            </summary>
            <returns>return all role in pagination</returns>
        </member>
    </members>
</doc>
